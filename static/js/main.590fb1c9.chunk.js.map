{"version":3,"sources":["components/MovieDb.js","components/Search.js","components/Rental.js","components/RentalCard.js","components/RentalsList.js","components/Movie.js","components/RentalLibrary.js","components/Customer.js","components/CustomerList.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["MovieDb","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","formatDate","date","newDate","Date","getMonth","getFullYear","state","isChecked","_this2","react_default","a","createElement","className","src","image","alt","name","type","onClick","addMovieCallback","title","releaseDate","overview","React","Component","SearchBar","searchDatabase","searchTerm","resetNotification","axios","get","concat","then","response","setState","results","data","displayResults","catch","error","console","log","addMovie","movie","params","release_date","image_url","external_id","externalId","post","notification","notifications","movieToAdd","message","displayNotification","errors","map","i","src_components_MovieDb","id","htmlFor","onChange","event","target","value","setDate","getDate","Rental","createRental","customer","dueDate","customer_id","movie_id","due_date","toISOString","rental","clearRental","clearSelection","showRental","showMovie","showCustomer","undefined","rentalContent","RentalCard","_ref","rentalId","movieTitle","customerId","customerName","checkoutDate","checkinRental","RentalsList","newRentals","rentals","filter","overdueRentals","getOverdueRentals","_this3","src_components_RentalCard","key","checkout_date","_this4","_this5","makeOverdueList","makeRentalList","Movie","findMovie","dateFormatting","inventory","RentalLibrary","movieId","selectedMovie","movies","find","selectMovie","src_components_Movie","makeMovieList","Customer","address","city","findCustomer","postalCode","phone","CustomerList","selectedCustomer","customers","selectCustomer","components_Customer","makeCustomerList","Home","rentalSubmitted","react_router_dom","components_Rental","to","react_router","path","component","Search","render","components_RentalLibrary","components_CustomerList","App","components_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.590fb1c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieDb.css';\nclass MovieDb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChecked: false,\n    };\n  }\n\nformatDate = (date) => {\n  const monthNames = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n\n  let newDate = new Date(date);\n  let formattedDate = monthNames[newDate.getMonth()] + ' ' + newDate.getFullYear();\n  return formattedDate;\n}\nrender () {\n\nreturn (\n  <section className=\"MovieCard\">\n      <div>\n        <img src={this.props.image} alt={this.props.name} className=\"searchIcon\"/>\n      </div>\n      <div>\n        <button \n          type='button'\n          className='button searchAdd'\n          onClick={() => {this.props.addMovieCallback(this.props)}}\n          >\n          Add</button>\n        <h3 className=\"searchMovieTitle\">{this.props.title}</h3>\n        <p className=\"searchDate\">{this.formatDate(this.props.releaseDate)}</p>\n        <p className=\"searchOverview\">{this.props.overview}</p>\n      {/* </div>\n      <div> */}\n        {/* <input onChange={this.handleChange} id={this.id} type=\"checkbox\" checked={this.state.isChecked} /> */}\n        \n      </div>\n  </section>\n  )\n}\n};\n\nMovieDb.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  externalId: PropTypes.number.isRequired,\n  addMovieCallback: PropTypes.func.isRequired,\n};\n\nexport default MovieDb;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// npm install bootstrap\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './Search.css';\nimport axios from 'axios';\nimport MovieDb from './MovieDb'\nimport { nullLiteral } from '@babel/types';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: '',\n      results: [],\n      notification: false,\n      notifications: '',\n      movieToAdd: ''\n    };\n  }\n// const SearchBar = ({ searchTerm, searchChangeCallback }) => {\n\nsearchDatabase = (searchTerm) => {\n  this.resetNotification();\n  axios.get(`https://video-store-backend.herokuapp.com/movies?query=${searchTerm}`)\n  .then((response) => {\n    this.setState({\n      searchTerm: searchTerm,\n      results: response.data,\n    });\n    this.displayResults();\n  })\n  .catch((error) => {\n    console.log('error');\n  });\n}\n\naddMovie = (movie) => {\n  this.resetNotification();\n  let params = {\n    title: movie.title,\n    overview: movie.overview,\n    release_date: movie.releaseDate,\n    image_url: movie.image,\n    external_id: movie.externalId\n  }\n\n  axios.post('https://video-store-backend.herokuapp.com/movies', params)\n  .then((response) => {\n    this.setState({\n      notification: true,\n      notifications: \"success\",\n      movieToAdd: movie.title,\n    })\n    console.log(response.data)\n  })\n  .catch((error) => {\n    console.log(error.message);\n    this.setState({\n      notification: true,\n      notifications: error.message,\n    })\n  });\n}\n\ndisplayNotification = () => {\n  if (this.state.notifications == \"Request failed with status code 500\") {\n  return (\n    <p className=\"notification error\">This Movie is Already Added to the Rental Library</p>\n  )\n  } else if (this.state.notifications == \"success\") {\n    return (\n    <p className=\"notification success\">{this.state.movieToAdd} Has Been Added to Rental Library</p>\n    )\n  } else {\n    return (\n      <p className=\"notification warning\">{this.state.errors}</p>\n    )\n  }\n}\n\nresetNotification = () => {\n  this.setState({\n    notification: false,\n    notifications: [],\n  });\n}\n\n\ndisplayResults = () => {\n  const resultList = (this.state.results).map((movie, i) => {\n    return <MovieDb title={movie.title} \n            id={i}\n            overview={movie.overview} \n            releaseDate={movie.release_date} \n            image={movie.image_url} \n            externalId={movie.id}\n            addMovieCallback={this.addMovie}/>\n  });\n  return resultList;\n}\n\nrender () {\nreturn (\n  <section>\n      {this.state.notification ? this.displayNotification(this.state.notifications) : ''}\n      <div>\n        <label className=\"search-bar--label\" htmlFor=\"searchBar\">Search Movie Database: </label>\n      </div>\n      <input\n        onChange={(event) => { this.searchDatabase(event.target.value) }}\n        value={this.searchTerm}\n        name=\"searchBar\"\n        id=\"searchBar\"\n        className=\"search-bar\"\n      />\n      <div>{this.displayResults()}</div>\n    </section>\n  )\n}\n};\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nlet date = new Date();\ndate.setDate(new Date().getDate() + 7);\n\nclass Rental extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rental: undefined,\n      dueDate: date,\n    };\n  }\n\n  createRental = (movie, customer, dueDate) => {\n    let params = {\n      customer_id: customer.id,\n      movie_id: movie.id,\n      due_date: dueDate.toISOString(),\n    }\n\n    axios.post(`https://video-store-backend.herokuapp.com/rentals/${movie.title}/check-out`, params)\n    .then((response) => {\n      this.setState({rental: response.data});\n      console.log(response.data);\n      this.clearRental();\n      this.props.clearSelection();\n    })\n    .catch((error) => {\n      this.setState({ error: error.message });\n    });\n  }\n\n  clearRental = () => {\n    this.setState({\n      rental: '',\n    });\n  }\n\n  showRental = () => {\n    const showMovie = this.props.movie ? <p>{this.props.movie.title}</p> : \"\";\n    const showCustomer = this.props.customer ? <p>{this.props.customer.name}</p> : \"\";\n    const showRental = this.state.rental ? <p>{this.state.rental}</p> : \"\";\n    return (\n      <div>\n        <p>{showMovie}</p>\n        <p>{showCustomer}</p>\n        <p>{`${showRental}`}</p>\n        <p></p>\n        <button onClick={() => {this.createRental(this.props.movie, this.props.customer, this.state.dueDate)}}>Checkout Rental</button>\n      </div>\n    )\n  }\n\n  render() {\n    const rentalContent = this.props.movie || this.props.customer ? <p>{ this.showRental() }</p> : \"\";\n    \n    return (\n      <div>\n        <section>\n          { rentalContent }\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Rental;","import React, { Component } from 'react';\nimport './RentalCard.css';\n\nconst RentalCard = ({ rentalId, movieTitle, customerId, customerName, checkoutDate, dueDate, checkinRental }) => {\n  \n  return (\n  <div>\n    <section className=\"RentalCard\">\n      <p>Title: { movieTitle }</p>\n      <p>Customer: { customerName }</p>\n      <p>Checkout date: { checkoutDate } </p>\n      <p>Due date: { dueDate }</p>\n    </section>\n    <button onClick={() => {checkinRental(customerId, movieTitle, rentalId)}} type=\"button\">Check in Rental</button>\n  </div>\n  )\n}\n\nexport default RentalCard;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport RentalCard from './RentalCard.js';\n\nclass RentalsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rentals: [],\n      overdueRentals: undefined,\n    };\n  }\n\n  componentDidMount () {\n    axios.get('https://video-store-backend.herokuapp.com/rentals')\n      .then((response) => {\n        this.setState({\n          rentals: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log('error');\n      });\n\n    this.getOverdueRentals();\n  }\n\n  makeRentalList() {\n    const rentalList = this.state.rentals.map((rental, i) => {\n       return <RentalCard\n         key={ i }\n         movieTitle={ rental.title }\n         customerId={ rental.customer_id }\n         customerName={ rental.name }\n         rentalId={ rental.id }\n         checkoutDate={ rental.checkout_date }\n         dueDate={ rental.due_date }\n         checkinRental= { this.checkinRental }\n       />\n     })\n \n     return rentalList;\n  }\n\n  makeOverdueList() {    \n    if (this.state.overdueRentals === undefined ) {\n      return <p>NO OVERDUE RENTALS</p>;\n    }\n    else {\n      const overdueList = this.state.overdueRentals.map((rental, i) => {\n        return <RentalCard\n          key={ i }\n          movieTitle={ rental.title }\n          customerId={ rental.customer_id }\n          customerName={ rental.name }\n          rentalId={ rental.id }\n          checkoutDate={ rental.checkout_date }\n          dueDate={ rental.due_date }\n          checkinRental= { this.checkinRental }\n        />\n      });\n      return overdueList;\n    }\n  }\n\n  getOverdueRentals() {\n    axios.get('https://video-store-backend.herokuapp.com/rentals/overdue')\n    .then((response) => {\n      this.setState({\n        overdueRentals: response.data,\n      });\n    })\n    .catch((error) => {\n      console.log('error');\n    });\n  }\n\n  checkinRental = (customerId, movieTitle, rentalId) => {\n    let params = {\n      customer_id: customerId,\n    }\n\n    axios.post(`https://video-store-backend.herokuapp.com/rentals/${movieTitle}/return`, params)\n    .then((response) => {\n      const newRentals = this.state.rentals.filter((rental) => rental.id !== rentalId);\n      this.setState({\n        rentals: newRentals,\n      });\n      this.clearRental();\n      this.props.clearSelection();\n    })\n    .catch((error) => {\n      this.setState({ error: error.message });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.makeOverdueList()}\n        {this.makeRentalList()}\n      </div>\n    )\n  }\n}\n\nexport default RentalsList;\n\n","import React, { Component } from 'react';\nimport './Movie.css';\nimport PropTypes from 'prop-types';\n\nconst Movie = (props) => {\n\n  return(\n    <section className='MovieCard'>\n      <div>\n      <img src={props.image} className='searchIcon' alt={`${props.title}`}/>\n      </div>\n      <div>\n      <button \n        type='button'\n        className='button'\n        onClick={() => {props.findMovie(props.id)}}\n      >\n      Select</button>\n      <h3 className='searchMovieTitle'> {props.title} </h3>\n      <p className='searchDate'> {props.dateFormatting(props.releaseDate)} </p>\n      <p className='searchOverview'> {props.overview} </p>\n      <p className='inventory'> Inventory Available: {props.inventory} </p>\n      </div>\n      \n\n      \n    </section>\n  );\n};\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  overview: PropTypes.string,\n  releaseDate: PropTypes.string,\n  inventory: PropTypes.number,\n  findMovie: PropTypes.func.isRequired\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\nimport Movie from './Movie';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass RentalLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  componentDidMount () {\n    axios.get('https://video-store-backend.herokuapp.com/movies')\n    .then((response) => {\n      this.setState({\n        movies: response.data\n      });\n    })\n    .catch((error) => {\n      // come back to handle errors better\n      console.log(error.message)\n    });\n  }\n\n  formatDate = (date) => {\n    const monthNames = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n  \n    let newDate = new Date(date);\n    let formattedDate = monthNames[newDate.getMonth()] + ' ' + newDate.getFullYear();\n    return formattedDate;\n  }\n\n  findMovie = (movieId) => {\n    const selectedMovie = this.state.movies.find((movie) => {\n      return movie.id === movieId;\n    });\n    this.props.selectMovie(selectedMovie);\n  }\n\n  makeMovieList() {\n    const movieList = this.state.movies.map((movie, i) => {\n      return <Movie\n        key={i}\n        id={movie.id}\n        image={movie.image_url}\n        title={movie.title}\n        overview={movie.overview}\n        releaseDate={movie.release_date}\n        inventory={1}\n        externalId={movie.external_id}\n        findMovie={this.findMovie}\n        dateFormatting={this.formatDate}\n      />\n    });\n    \n    return movieList\n  }\n\n  render() {\n    return (\n      <div>\n        { this.makeMovieList() }\n      </div>\n    )\n  }\n\n}\n\nRentalLibrary.propTypes = {\n  selectMovie: PropTypes.func.isRequired\n}\n\nexport default RentalLibrary;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Customer = ({ id, name, address, city, state, postalCode, phone, findCustomer }) => {\n  \n  return (\n  <div>\n    <section>\n      <p>{ id }</p>\n      <p>{ name }</p>\n      <p>{ address }</p>\n      <p>{ city }</p>\n      <p>{ state }</p>\n    </section>\n    <button onClick={() => {findCustomer(id)}} type=\"button\">Select</button>\n  </div>\n  )\n}\n\nCustomer.propTypes = {\n  findCustomer: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  address: PropTypes.string,\n  city: PropTypes.string,\n  state: PropTypes.string,\n  postalCode: PropTypes.string,\n  phone: PropTypes.string,\n}\n\nexport default Customer;","import React, { Component } from 'react';\nimport Customer from './Customer.js';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass CustomerList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      customers: [],\n    };\n  }\n\n  componentDidMount () {\n    axios.get('https://video-store-backend.herokuapp.com/customers')\n      .then((response) => {\n        this.setState({\n          customers: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n\n  findCustomer = (customerId) => {\n    const selectedCustomer = this.state.customers.find((customer) => {\n      return customer.id === customerId;\n    })\n    \n    this.props.selectCustomer(selectedCustomer);\n  }\n\n  makeCustomerList() {\n   const customerList = this.state.customers.map((customer, i) => {\n      return <Customer\n        key={ i }\n        id={ customer.id }\n        name={ customer.name }\n        address={ customer.address }\n        city={ customer.city }\n        state={ customer.state }\n        postalCode={ customer.postalCode }\n        phone={ customer.phone }\n        findCustomer={ this.findCustomer }\n      />\n    })\n\n    return customerList;\n  }\n\n  render () {\n    return (\n      <div>\n        { this.makeCustomerList() }\n      </div>\n    )\n  }\n}\n\nCustomerList.propTypes = {\n  selectCustomer: PropTypes.func.isRequired\n}\n\nexport default CustomerList;","import React, { Component } from 'react';\nimport { Route, NavLink, HashRouter} from \"react-router-dom\";\nimport Search from \"./Search\";\nimport Rental from \"./Rental\";\nimport RentalsList from \"./RentalsList\";\nimport RentalLibrary from \"./RentalLibrary\";\nimport CustomerList from \"./CustomerList\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedCustomer: undefined,\n      selectedMovie: undefined,\n      rentalSubmitted: false,\n    };\n  }\n    \n  selectCustomer = (customer) => {\n    this.setState({\n      selectedCustomer: customer,\n    });\n  }\n\n  selectMovie = (movie) => {\n    this.setState({ \n      selectedMovie: movie\n    });\n  }\n\n  clearSelection = () => {\n    this.setState({\n      selectedCustomer: undefined,\n      selectedMovie: undefined,\n      rentalSubmitted: true,\n    })\n  }\n\n  render () {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n            <h1>Ada Movie Store</h1>\n            <section><Rental movie={this.state.selectedMovie} customer={this.state.selectedCustomer} clearSelection={this.clearSelection}/></section>\n            <ul className=\"header\">\n              <li><NavLink to=\"/search\">Search</NavLink></li>\n              <li><NavLink to=\"/movies\">Movies</NavLink></li>\n              <li><NavLink to=\"/customers\">Customers</NavLink></li>\n              <li><NavLink to=\"/rentals\">Rentals</NavLink></li>\n            </ul>\n            <div className=\"content\">\n              <Route path=\"/search\" component={Search}/>\n              <Route path=\"/movies\" render={() => <RentalLibrary selectMovie={this.selectMovie}/>}/>\n              <Route path=\"/customers\" render={() => <CustomerList selectCustomer={this.selectCustomer} />}/>\n              <Route path=\"/rentals\" component={RentalsList}/>\n            </div>\n          </div>\n      </HashRouter>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from \"./components/Home\";\n// import Rentals from \"./components/Rentals\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Home />\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}